"use strict";const line={color:"gray",content:"━━╸"},dropzoneSytle={bc:"#1B1B1B",dc:"#333333"},CAPACITY_DEFAULT=24;let nbtEditor,nbtEncode,nbtDecode;const _=t=>document.getElementById(t),loadLastFile=()=>nbtEditor.lastFile();function dateString(t){let e=new Date(1e3*Number(t)),r=e.getFullYear(),i=e.getMonth()+1,n=e.getDate(),s=e.getHours(),a=e.getMinutes();return e.getSeconds(),`${n}/${i}/${r} at ${s}:${a}`}const bigIntJSON={replacer:(t,e)=>"bigint"==typeof e?e.toString():e,reviver:(t,e)=>"string"==typeof e&&/^\d+n$/.test(e)?BigInt(e.slice(0,-1)):e};class UIController{static data=[];static toggleD=[];static audio;static audioPlay(){UIController.audio.play()}static redirectTo(t){window.location.href=t}static toggle(){return UIController.toggleD.findIndex(t=>t.checked)}static switch(){let t=[document.getElementById("generator"),document.getElementById("generator1"),document.getElementById("generator2")],e=UIController.toggle();switch(e){case -1:case 0:t.shift().hidden=!1,t.forEach(t=>t.hidden=!0),UIController.data[3].refresh();break;case 1:t.shift().hidden=!0,t[1].hidden=!0,t[0].hidden=!1,UIController.data[0].refresh(),UIController.data[1].refresh(),UIController.data[2].refresh();break;case 2:t[2].hidden=!1,t.pop(),t.forEach(t=>t.hidden=!0),UIController.data[4].refresh(),UIController.data[5].refresh()}}static downloadFile(t,e,r="application/json"){let i=new Blob([t],{type:r}),n=URL.createObjectURL(i),s=document.createElement("a");s.href=`${n}`,s.download=e,s.textContent="",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n)}static copyToClipboard(t){let e=document.createElement("textarea");e.value=t,e.style.position="fixed",e.style.top="-9999px",e.style.left="-9999px",e.style.opacity=0,document.body.appendChild(e),e.focus(),e.select();try{document.execCommand("copy")}catch(r){throw alert("Can't coppy the data (due to browser issue)"),Error(r.stack)}document.body.removeChild(e)}}function storageAvailable(t){let e;try{e=window[t];let r="__storage_test__";return e.setItem(r,r),e.removeItem(r),!0}catch(i){return i instanceof DOMException&&(22===i.code||1014===i.code||"QuotaExceededError"===i.name||"NS_ERROR_DOM_QUOTA_REACHED"===i.name)&&e&&0!==e.length}}function cookiesEnabled(){document.cookie="testcookie=true";let t=-1!==document.cookie.indexOf("testcookie");return document.cookie="testcookie=true; expires=Thu, 01 Jan 1970 00:00:00 UTC;",t}document.addEventListener("DOMContentLoaded",()=>{let t={domain:"choigame123.github.io",redirectTo:["https://","github.com","/Choigame123"],beta:!0,current:!1};setInterval(()=>{if(UIController.redirectTo=function(t){window.location.href=t},t.domain!==document.domain&&(t.current=!0),t.current&&!t.beta)for(;;)throw document.querySelector("body").innerHTML="",window.location.href=t.redirectTo.join(""),Error("Code run in invalid domain.")},5e3),_("btn-lf").hidden=storageAvailable("localStorage");let e=[_("dropzone1"),_("dropzone2"),_("dropzone3")];UIController.toggleD=[_("radio1"),_("radio2"),_("radio3")];let r={codemirror:!1,output:_("editor-output"),output1:void 0,lastFile:_("last-file-load-label"),fileLabel:_("edit-file-label"),input:_("editor-file-in"),preview:{root:_("editor-selector"),out:_("json-preview"),codemirror:void 0,indent:_("encode-indent")}},i=CodeMirror.fromTextArea(r.preview.out,{lineNumbers:!0,scrollbarStyle:"null",hints:!0,mode:"application/json",theme:"tomorrow-night-bright",readOnly:"nocursor"});UIController.data[3]=i,r.preview.codemirror=i,nbtEditor=new NBTEditor(-1,!0,r,!0),r.input.addEventListener("change",t=>nbtEditor.loadFile(t.target.files[0])),e[0].addEventListener("dragover",t=>{t.preventDefault(),e[0].style.background="${dropzoneSytle.dc}"}),e[0].addEventListener("dragleave",t=>{t.preventDefault(),e[0].style.background="${dropzoneSytle.bc}"}),e[0].addEventListener("drop",t=>{t.preventDefault(),e[0].style.background="${dropzoneSytle.bc}",nbtEditor.loadFile(t.dataTransfer.files[0])});let n=_("encode-output"),s=_("encode-input-area"),a=_("nbt-interface"),o=_("encode-file-label"),l=_("encode-download-btn"),h=CodeMirror.fromTextArea(a,{lineNumbers:!1,scrollbarStyle:"null",hints:!0,readOnly:"nocursor",mode:"text/typescript",theme:"tomorrow-night-bright"}),d=CodeMirror.fromTextArea(s,{lineNumbers:!0,scrollbarStyle:"null",hints:!0,mode:"application/ld+json",theme:"tomorrow-night-bright",matchBrackets:!0,extraKeys:{"Ctrl-Q":function(t){t.foldCode(t.getCursor())}}}),c=CodeMirror.fromTextArea(n,{lineNumbers:!0,scrollbarStyle:"null",hints:!0,mode:"javascript",theme:"tomorrow-night-bright",matchBrackets:!0,extraKeys:{"Ctrl-Q":function(t){t.foldCode(t.getCursor())}}});function p(t){o.textContent=t.name;let e=new FileReader;e.onload=t=>{d.setValue(t.target.result)},e.readAsText(t)}UIController.data[0]=d,UIController.data[1]=c,UIController.data[2]=h,d.on("change",()=>{let t=d.getValue(),e;try{e=JSON.parse(t.replace(/\n|\ /g,""),bigIntJSON.reviver)}catch(r){l.hidden=!0,c.setValue(JSON.stringify({error:!0,reason:"Not a valid json.",domErr:String(r.stack)},bigIntJSON.replacer,2))}try{let i=new Packer(e,!0);if(i.error)return l.hidden=!0,c.setValue(JSON.stringify({error:!0,reason:"Not a valid nbt interface.",encoderErr:i.err},bigIntJSON.replacer,2));let n=new TextDecoder;c.setValue(n.decode(new Uint8Array(i.buffer))),l.hidden=!1,nbtEncode=i}catch(s){l.hidden=!0,c.setValue(JSON.stringify({error:!0,reason:"Unknown, see `domErr`",domErr:String(s.stack)},bigIntJSON.replacer,2))}}),_("encode-file-in").addEventListener("change",t=>p(t.target.files[0])),e[1].addEventListener("dragover",t=>{t.preventDefault(),e[1].style.background="${dropzoneSytle.dc}"}),e[1].addEventListener("dragleave",t=>{t.preventDefault(),e[1].style.background="${dropzoneSytle.bc}"}),e[1].addEventListener("drop",t=>{t.preventDefault(),e[1].style.background="${dropzoneSytle.bc}",p(t.dataTransfer.files[0])});let u={codemirror:!0,output:void 0,output1:void 0,lastFile:void 0,fileLabel:_("decode-file-label"),input:_("decode-file-in"),e:{json:_("decode-json-output"),nbt:_("decode-nbt-output")},l:{json:_("decode-json-download-btn"),nbt:_("decode-nbt-download-btn")},preview:{indent:_("decode-indent")}},b=CodeMirror.fromTextArea(u.e.json,{lineNumbers:!0,scrollbarStyle:"null",hints:!0,mode:"application/json",theme:"tomorrow-night-bright",matchBrackets:!0}),g=CodeMirror.fromTextArea(u.e.nbt,{lineNumbers:!0,scrollbarStyle:"null",hints:!0,mode:"application/json",theme:"tomorrow-night-bright",matchBrackets:!0});u.output=b,UIController.data[4]=b,u.output1=g,UIController.data[5]=g,(nbtDecode=new NBTEditor(-1,!0,u,!1)).onChange=t=>(t._.output.getWrapperElement().style["margin-top"]="8px",t._.output1.getWrapperElement().style["margin-top"]="8px",t._.l.json.hidden=!1,t._.l.nbt.hidden=!1),nbtDecode.onError=(t,e)=>(e._.output.getWrapperElement().style["margin-top"]="0",e._.output1.getWrapperElement().style["margin-top"]="0",e._.l.json.hidden=!0,e._.l.nbt.hidden=!0),u.input.addEventListener("change",t=>nbtDecode.loadFile(t.target.files[0])),e[2].addEventListener("dragover",t=>{t.preventDefault(),e[2].style.background="${dropzoneSytle.dc}"}),e[2].addEventListener("dragleave",t=>{t.preventDefault(),e[2].style.background="${dropzoneSytle.bc}"}),e[2].addEventListener("drop",t=>{t.preventDefault(),e[2].style.background="${dropzoneSytle.bc}",nbtDecode.loadFile(t.dataTransfer.files[0])}),UIController.switch(),UIController.toggleD[0].addEventListener("click",()=>UIController.switch()),UIController.toggleD[1].addEventListener("click",()=>UIController.switch()),UIController.toggleD[2].addEventListener("click",()=>UIController.switch()),UIController.audio=_("audio")});class NBTEditor{constructor(t,e,r,i=!1){let n=r.codemirror||!1,s=r.output,a=r.output1,o=r.fileLabel,l=r.lastFile;return this._=r,this.isCodeMirror=n,this.outputElement=s,this.outputElement1=a,this.lastLabelElm=l,this.fileNameElm=o,this.LE=e,this.file=t,this.init(),this.readOnly=i,this.db=window.localStorage,this}set onChange(t){this.func=t}get onChange(){return this.func}set onError(t){this.efunc=t}get onError(){return this.efunc}fileLoader(t){return new Promise((e,r)=>{let i=new FileReader;i.onload=function(t){let r=t.target.result,i=new DataView(r);e({buffer:r,file:i})},i.readAsArrayBuffer(t)})}async init(t){if(-1!==this.file){if(this.file instanceof ArrayBuffer)this.buffer=this.file,this.file=new DataView(this.file);else if(this.file instanceof File){let e=await this.fileLoader(this.file);this.file=e.file,this.buffer=e.buffer}else if(file instanceof Blob)this.buffer=await file.arrayBuffer(),this.file=new DataView(this.buffer);else if(!this.file instanceof DataView)throw SyntaxError("Input file must be a: ArrayBuffer, File, DataView, Blob");try{this.parser=new Parser(this.file,this.LE,this.buffer)}catch(r){try{this.efunc&&this?.efunc(r,this)}catch(i){console.warn(i)}this.fileNameElm.textContent=this.name,this.lastLabelElm&&(this.lastLabelElm.textContent=""),this.outputElement1&&this.isCodeMirror&&this.outputElement1.setValue(r.toString()),this._.preview&&(this._.preview.root.hidden=!0),this.isCodeMirror?this.outputElement.setValue(r.toString()):this.outputElement.innerHTML=`
<br><label style="color: red;">[${this.name}] ${r.toString()}
</label>`;return}if(this.parser.error){try{this.efunc&&this.efunc(this.parser.error,this)}catch(n){console.warn(n)}this.fileNameElm.textContent=this.name,this.lastLabelElm&&(this.lastLabelElm.textContent=""),this.outputElement1&&this.isCodeMirror&&this.outputElement1.setValue(JSON.stringify(this.parser.error,bigIntJSON.replacer,2)),this._.preview&&(this._.preview.root.hidden=!0),this.isCodeMirror?this.outputElement.setValue(JSON.stringify(this.parser.error,bigIntJSON.replacer,2)):this.outputElement.innerHTML=`
<br><label style="color: red;">[${this.name}] ${JSON.stringify(this.parser.error,bigIntJSON.replacer,2)}
</label>`;return}try{this.func&&this.func(this)}catch(s){console.error(s)}if(this.isCodeMirror){if(this.outputElement.setValue(JSON.stringify(this.parser.output,bigIntJSON.replacer,2)),!this.outputElement1)throw Error("Null Pointer");this.outputElement1.setValue(JSON.stringify(this.parser.nbt,bigIntJSON.replacer,2)),this.data=this.parser.output,this.nbt=this.parser.nbt}else try{this.nbt_tree=new NBTTree(this.parser.nbt,this.readOnly),this.outputElement.innerHTML=this.nbt_tree.data,this.data=this.parser.output,this.nbt=this.parser.nbt,Array.from(document.querySelectorAll(".nbt.text")).forEach(t=>NBTTree.change(t,-1)),this.preview()}catch(a){try{this.efunc&&this.efunc(a,this)}catch(o){console.warn(o)}this.fileNameElm.textContent=this.name,this.lastLabelElm&&(this.lastLabelElm.textContent=""),this.outputElement1&&this.isCodeMirror&&this.outputElement1.setValue(`\`${String(a.stack)}\``),this._.preview&&(this._.preview.root.hidden=!0),this.isCodeMirror?this.outputElement.setValue(`\`${String(a.stack)}\``):this.outputElement.innerHTML=`
<br><label style="color: red;">[${this.name}] ${a.stack}
</label>`;return}t&&(this.db.setItem("last-file-name",this.name),this.db.setItem("last-file",JSON.stringify(Array.from(new Uint8Array(this.buffer)))))}}lastFile(){let t=this.db.getItem("last-file"),e=this.db.getItem("last-file-name");return this.fileNameElm.textContent=e,this.name=e,this.file=new Uint8Array(JSON.parse(t)).buffer,this.lastLabelElm&&(this.lastLabelElm.innerHTML="<br><br>The file you imported from the previous session has been restored."),this.init(),this.file}loadFile(t){return this.file=t,this.orginal_file=t,this.name=t.name,this.fileNameElm.textContent=t.name,this.init(!0),this.file}change(t){let e=t.id,r=t.value,i=e.split("#"),n=+i.pop(),{output:s,nbt:a}=this.parser,o=t=>2===t||3===t||4===t||5===t||6===t,l=t=>t.replace(/\n|\ /g,"");this.nbt=function t(e,r,i,s=!1){let a=s?[...e]:{...e};if(1===r.length)s?a[r[0]]=o(n)?+i:-1===n?l(i):i:a[r[0]].data=o(n)?+i:-1===n?l(i):i;else{let[h,...d]=r;a[h].data=t(e[h].data,d,i,9===a[h].type)}return a}(a,i,r),this.data=function t(e,r,i){let s={...e};if(1===r.length)s[r[0]]=o(n)?+i:-1===n?l(i):i;else{let[a,...h]=r;s[a]=t(e[a],h,i)}return s}(s,i,r),this.preview()}export(){return{nbt:this.nbt,json:this.json}}preview(){this._.preview&&(this._.preview.root.hidden=!1,this._.preview.codemirror.setValue(JSON.stringify(this.nbt,bigIntJSON.replacer,+this._.preview.indent.value)))}jsonClipboard(){try{navigator.clipboard.writeText(JSON.stringify(this.data,bigIntJSON.replacer,+this._.preview.indent.value))}catch{UIController.copyToClipboard(JSON.stringify(this.data,bigIntJSON.replacer,+this._.preview.indent.value))}}nbtClipboard(){try{navigator.clipboard.writeText(JSON.stringify(this.nbt,bigIntJSON.replacer,+this._.preview.indent.value))}catch{UIController.copyToClipboard(JSON.stringify(this.nbt,bigIntJSON.replacer,+this._.preview.indent.value))}}download(){UIController.downloadFile(JSON.stringify(this.data,bigIntJSON.replacer,+this._.preview.indent.value),"raw-nbt.json","application/json"),UIController.downloadFile(JSON.stringify(this.nbt,bigIntJSON.replacer,+this._.preview.indent.value),"encode-nbt.json","application/json")}jsonDownload(){UIController.downloadFile(JSON.stringify(this.data,bigIntJSON.replacer,+this._.preview.indent.value),"raw-nbt.json","application/json")}nbtDownload(){UIController.downloadFile(JSON.stringify(this.nbt,bigIntJSON.replacer,+this._.preview.indent.value),"encode-nbt.json","application/json")}encodeDownload(){try{let t=new Packer(this.nbt,!0);if(t.error)throw Error(JSON.stringify(t.error));UIController.downloadFile(t.buffer,"nbt.nbt","application/octet-stream")}catch(e){console.error(e)}}}class NBTTree{editor={};group=[];data="";static change(t,e){let r=+t.value;if(!Number.isNaN(r))switch(e){case 2:(r<-32768||r>32767)&&(alert("Out of number range (-32768 -> 32767)"),t.value=t.value<0?-32768:32767);break;case 3:(r<-2147483648||r>2147483647)&&(alert("Out of number range (-2147483648 -> 2147483647)"),t.value=t.value<0?-2147483648:2147483647);break;case 4:(r<0x8000000000000000||r>0x7fffffffffffffff)&&(alert("Out of number range (-9223372036854775808 -> 9223372036854775807)"),t.value=t.value<0?0x8000000000000000:0x7fffffffffffffff)}t.style.width=(t.value.length+1)*8+"px"}constructor(t,e=!1){return this.readOnly=e,this.data=this.compound("",t[""].data),this.group=[],this}compound(t="main",e,r=!1,i=!1){r&&(e=e.data);let n=Object.keys(e??{}),s=!1,a=`
<ul class="nbt${r?1:0}">
    <li>
        ${r?`<label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":i?"┗━━&puncsp;&hairsp;&hairsp;":line.content}</label>`:""}
        <img class="nbt img"${""===t&&window.innerWidth>1024?' style="transform: translateX(-2.5vw)"':""} src="./app-theme/nbt/compound-icon.png"/>
        <label style="font-size: 1em">${t}</label>
    </li>
</ul>`;if(a+=`
<ul class="nbt${i?"7":"2"}">`,!n.length)return a+`
<ul>Empty</ul></ul>`;this.group.push(t);for(let o=0;o<n.length;o++){let l=n[o];if((s=o===n.length-1)&&(a+=`
</ul>
<ul class="nbt${r?3:6}">`),"FlatWorldLayers"===l){a+=`
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/string-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <br>
    <textarea class="nbt5" id="${this.group.join("#")}#${l}#-1" onchange="nbtEditor.change(this)">${JSON.stringify(JSON.parse(e[l].data),bigIntJSON.replacer,2)}</textarea>
`;continue}switch(e[l].type){case 1:a+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/byte-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input type="checkbox" id="${this.group.join("#")}#${l}#1" onchange="nbtEditor.change(this)" ${1===e[l].data?"checked":""}/>
</ul>`;break;case 2:a+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/short-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${l}#2" min="-32768" max="32767" value="${e[l].data}" oninput="NBTTree.change(this, 2)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 3:a+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/int-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${l}#3" min="-2147483648" max="2147483647" value="${e[l].data}" oninput="NBTTree.change(this, 3)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 4:a+="LastPlayed"===l?`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/long-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${l}#4" min="-9223372036854775808" max="9223372036854775807" value="${e[l].data}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"${this.readOnly?"readonly":""}/>
    <label style="font-size: 1em; color: gray; font-size: 0.8rem">(${dateString(e[l].data)})</label>
</ul>`:`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/long-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${l}#4" min="-9223372036854775808" max="9223372036854775807" value="${e[l].data}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 5:a+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/float-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${l}#5" value="${e[l].data}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 6:a+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/double-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${l}#6" value="${e[l].data}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 7:case 11:case 12:throw SyntaxError(`Missing parser for type: ${e[l].type}`);case 8:a+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${s?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/string-icon.png"/>
    <label style="font-size: 1em">${l}: </label>
    <input class="nbt text" type="string" id="${this.group.join("#")}#${l}#8" value="${e[l].data}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 9:a+=`
${this.list(l,e[l],!0,s)}
`;break;case 10:a+=`
${this.compound(l,e[l],!0,s)}
`;break;default:throw Error(`Render type not found: ${e[l].type}`)}}return a+=`
</ul>`,this.group.pop(),a}list(t="main",e,r=!1,i=!1,n=e){let s=Object.keys((e=e.data)??{}),a=!1,o=`
<ul class="nbt${r?1:0}">
    <li>
        ${r?`<label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":i?"┗━━&puncsp;&hairsp;&hairsp;":line.content}</label>`:""}
        <img class="nbt img" src="./app-theme/nbt/list-icon.png"/>
        <label style="font-size: 1em">${t}</label>
    </li>
</ul>`;if(o+=`
<ul class="nbt${i?"7":"2"}">`,!s.length)return o+`
<ul>Empty</ul></ul>`;this.group.push(t);for(let l=0;l<n.length;l++){if(l>50){o+=`
</ul>
<ul class="nbt${r?3:6}">
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">┗━━&puncsp;&hairsp;</label>
    <label>... more ${n.length-l} values</label>
</ul>`;break}let h=s[l];switch((a=l===s.length-1)&&(o+=`
</ul>
<ul class="nbt${r?3:6}">`),n.data_type){case 1:o+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/byte-icon.png"/>
    <label style="font-size: 1em">${h}: </label>
    <input type="checkbox" id="${this.group.join("#")}#${h}#1" ${1===e[h]?"checked":""} onchange="nbtEditor.change(this)"/>
</ul>`;break;case 2:o+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/short-icon.png"/>
    <label style="font-size: 1em">${h}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${h}#2" min="-32768" max="32767" value="${e[h]}" oninput="NBTTree.change(this, 2)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 3:o+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/int-icon.png"/>
    <label style="font-size: 1em">${h}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${h}#3" min="-2147483648" max="2147483647" value="${e[h]}" oninput="NBTTree.change(this, 3)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 4:o+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/long-icon.png"/>
    <label style="font-size: 1em">${h}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${h}#4" min="-9223372036854775808" max="9223372036854775807" value="${e[h]}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 5:o+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/float-icon.png"/>
    <label style="font-size: 1em">${h}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${h}#5" value="${e[h]}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 6:o+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/double-icon.png"/>
    <label style="font-size: 1em">${h}: </label>
    <input class="nbt text" type="number" id="${this.group.join("#")}#${h}#6" value="${e[h]}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 7:case 11:case 12:throw SyntaxError(`Missing parser for type: ${n.data_type}`);case 8:o+=`
<ul>
    <label style="color: ${line.color}; font-size: 1rem; text-decoration: bold;">${a?"┗━━&puncsp;&hairsp;":line.content}</label>
    <img class="nbt img" src="./app-theme/nbt/string-icon.png"/>
    <label style="font-size: 1em">${h}: </label>
    <input class="nbt text" type="string" id="${this.group.join("#")}#${h}#8" value="${e[h]}" oninput="NBTTree.change(this, -1)" onchange="nbtEditor.change(this)"/>
</ul>`;break;case 9:o+=`
${this.list(h,e[h],!0,a)}
`;break;case 10:o+=`
${this.compound(h,e[h],!0,a)}
`;break;default:throw Error(`Render type not found: ${n.data_type}`)}}return o+=`
</ul>`,this.group.pop(),o}}class Parser{constructor(t,e,r){if(this.reader=new Reader(t,e),this.data=Array.from(new Uint8Array(r)),this.length=t.byteLength,this.LE=e||!1,this.output={},this.nbt={},this.nbt.empty_property=!1,this.nbt.hasHeader=!1,this.nbt.type=-1,this.nbt.isNBT=!0,this.special_header=0!==this.data[0]&&0===this.data[1]&&0===this.data[2]&&0===this.data[3]&&4!==this.length,10===this.reader.readByte()&&!this.special_header){if(this.hasHeader=!1,this.output=this.readCompound(!1,!0),this.nbt.empty_property){let i=this.output;this.output={},this.output[""]=i}return this}if(this.reader.pos-=1,8===this.reader.readByte()||this.special_header){if(this.reader.pos-=1,this.nbt.hasHeader=!0,this.nbt.header=[this.reader.readInt(),this.reader.readInt()],this.output=this.readCompound(!0,!0),this.nbt.empty_property){let n=this.output;this.output={},this.output[""]=n}return this}return this.error={error:!0,reason:"Not a vaild file (can't detect a compound)"},this}_switcher(t,e){let r,i,n={};switch(t){case 1:i=this.reader.readByte();break;case 2:i=this.reader.readShort();break;case 3:i=this.reader.readInt();break;case 4:i=this.reader.readLong();break;case 5:i=this.reader.readFloat();break;case 6:i=this.reader.readDouble();break;case 7:n=this.readByteList();break;case 8:i=this.reader.readString();break;case 9:n=(e=this.readList()).nbt,i=e.out;break;case 10:r=(e=this.readCompound()).nbt,i=e.out;break;case 11:n=this.readIntList();break;case 12:n=this.readLongList();break;default:throw Error(`Invalid item type: ${t}`)}return{data:i,end:!1,nbt:r,list:n}}readCompound(t=!1,e=!1){let r={},i={};for(t&&(this.reader.pos+=1),0===this.reader.readByte()?(e&&(this.nbt.empty_property=!0),this.reader.pos--,this.reader.readString()):this.reader.pos--;this.data[this.reader.pos]<this.length;){let n=this.reader.pos,s=this.reader.readByte();if(0===s)break;let a;try{a=this.reader.readString()}catch{this.error={error:!0,reason:"Not a vaild file (EOF)",position:n};break}let{end:o,data:l,nbt:h,list:d}=this._switcher(s);if(o)break;r[a]=l,void 0!==h&&(l=h),i[a]={type:s,data:l,...d}}return e&&!r.error?(this.nbt[""]={data:i,type:10},r):{out:r,nbt:i}}readList(){let t=this.reader.readByte(),e=this.reader.readInt(),r=[],i=[];for(let n=0;n<e;n++){let s=this._switcher(t);9===t?(r.push(s.data),i.push(s.list)):10===t?(r.push(s.data),i.push(s.nbt)):(r.push(s.data),i.push(s.data))}return{out:r,nbt:{data_type:t,data:i,nested:9===t,length:e}}}readLongList(){this.error={error:!0,reason:"Missing parser for type: 12",position:this.reader.pos}}readIntList(){this.error={error:!0,reason:"Missing parser for type: 11",position:this.reader.pos}}readByteList(){this.error={error:!0,reason:"Missing parser for type: 7",position:this.reader.pos}}}class Reader{constructor(t,e){if(!t instanceof DataView)throw SyntaxError("Input data must be a DataView.");this.pos=0,this.data=t,this.length=t.byteLength,this.littleEndian=e||!1}readByte(){let t=this.data.getInt8(this.pos);return this.pos+=1,t}readUnsignedByte(){let t=this.readByte();if(t<0)throw Error("EOF");return t}readShort(){let t=this.data.getInt16(this.pos,this.littleEndian);return this.pos+=2,t}readInt(){let t=this.data.getInt32(this.pos,this.littleEndian);return this.pos+=4,t}readLong(){let t=this.data.getBigInt64(this.pos,this.littleEndian);return this.pos+=8,t}readFloat(){let t=this.data.getFloat32(this.pos,this.littleEndian);return this.pos+=4,t}readDouble(){let t=this.data.getFloat64(this.pos,this.littleEndian);return this.pos+=8,t}readString(){let t=this.readShort();if(t<=0)return"";let e=new Uint8Array(t);for(let r=0;r<t;r++)e[r]=this.readByte();let i="",n,s,a,o=0;for(;o<t;)switch((n=e[o++])>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:i+=String.fromCharCode(n);break;case 12:case 13:i+=String.fromCharCode((31&n)<<6|63&(s=e[o++]));break;case 14:i+=String.fromCharCode((15&n)<<12|(63&(s=e[o++]))<<6|(63&(a=e[o++]))<<0)}return i}toString(){return`{ pos: ${this.pos}, length: ${this.length}, littleEndian: ${this.littleEndian} }`}}class Writer{constructor(t){this.pos=0,this.buff=new ArrayBuffer(24),this.view=new Int8Array(this.buff),this.data=new DataView(this.buff),this.littleEndian=t||!0}ensureCapacity(t){var e=this.buff.byteLength;if(t-e>0){let r=e<<1;r-t<0&&(r=t);let i=this.view,n=[],s=new ArrayBuffer(r),a=new Int8Array(s);for(let o=0;o<e;o++)n.push(i[o]);a.set(n),this.buff=s,this.view=a,this.data=new DataView(s)}}writtenView(){return this.view}writtenLength(){return this.pos}writeByte(t){return this.ensureCapacity(this.pos+1),this.data.setInt8(this.pos,t),this.pos+=1,this}writeShort(t){return this.ensureCapacity(this.pos+2),this.data.setInt16(this.pos,t,this.littleEndian),this.pos+=2,this}writeHeaderInt(t,e){return this.data.setInt32(t,e,this.littleEndian),this}writeInt(t){return this.ensureCapacity(this.pos+4),this.data.setInt32(this.pos,t,this.littleEndian),this.pos+=4,this}writeLong(t){return this.ensureCapacity(this.pos+8),"bigint"!=typeof t&&(t=BigInt(t)),this.data.setBigInt64(this.pos,t,this.littleEndian),this.pos+=8,this}writeFloat(t){return this.ensureCapacity(this.pos+4),this.data.setFloat32(this.pos,t,this.littleEndian),this.pos+=4,this}writeDouble(t){return this.ensureCapacity(this.pos+8),this.data.setFloat64(this.pos,t,this.littleEndian),this.pos+=8,this}writeString(t){let e=t.length,r=0;for(let i=0;i<e;i++){let n=t.charCodeAt(i);n>=1&&n<=127?r+=1:n>2047?r+=3:r+=2}if(r>65535)throw Error(`Encoded string too long: ${r} bytes. (max: 65535)`);this.writeShort(r);for(let s=0;s<e;s++){let a=t.charCodeAt(s);a>=1&&a<=127?this.writeByte(a):a>2047?this.writeByte(224|a>>12&15).writeByte(128|a>>6&63).writeByte(128|a>>0&63):this.writeByte(192|a>>6&31).writeByte(128|a>>0&63)}return this}toString(){return`NBTWriter { pos: ${this.pos}, littleEndian: ${this.littleEndian} }`}}class Packer{constructor(t,e){try{if(!t.isNBT)return{error:!0,reason:"Not a nbt"};this.writer=new Writer(e),this.LE=e,t.hasHeader&&(this.writer.writeInt(t.header[0]),this.writer.writeInt(0)),this.writer.writeByte(10),t.empty_property&&(this.writer.writeByte(0),this.writer.writeByte(0)),this.compound(t[""]),this.writer.writeByte(0);let r=this.writer.writtenLength();if(t.hasHeader){let i=r-8;this.writer.writeHeaderInt(4,i)}let n=this.writer.data.buffer,s=new ArrayBuffer(r),a=new Int8Array(n,0,r),o=new Int8Array(s);return o.set(a),this.buffer=s,this}catch(l){return{error:!0,reason:"Invalid nbt - input not follow the interface.",domErr:String(l.stack)}}}compound(t){let e=t.data;for(let r in e){try{e[r].type}catch{continue}this.writeProperty(e[r].type,r,e[r],!1)}return this}list(t){let{data_type:e,length:r,data:i,nested:n}=t;for(let s of(this.writer.writeByte(e).writeInt(r),i))this.writeProperty(e,void 0,n?s:{data:s},!0);return this}writeProperty(t,e,r,i=!1){switch(i||this.writer.writeByte(t).writeString(e),t){case 1:this.writer.writeByte(r.data);break;case 2:this.writer.writeShort(r.data);break;case 3:this.writer.writeInt(r.data);break;case 4:this.writer.writeLong(r.data);break;case 5:this.writer.writeFloat(r.data);break;case 6:this.writer.writeDouble(r.data);break;case 7:case 11:case 12:break;case 8:this.writer.writeString(r.data);break;case 9:this.list(r);break;case 10:this.compound(r),this.writer.writeByte(0);break;default:throw Error(`Unsupported nbt type id: ${t}`)}return this}download(t="level.dat"){UIController.downloadFile(this.buffer,t,"application/octet-stream")}}